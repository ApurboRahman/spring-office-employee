<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sp.co.soe.emp.domain.repository.MessageMMapper">
  <resultMap id="BaseResultMap" type="sp.co.soe.emp.domain.entity.MessageM">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <id column="message_id" jdbcType="INTEGER" property="messageId" />
    <result column="message_nm" jdbcType="VARCHAR" property="messageNm" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_pgid" jdbcType="VARCHAR" property="createPgid" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_pgid" jdbcType="VARCHAR" property="updatePgid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    message_id, message_nm, create_user, create_date, create_pgid, update_user, update_date, 
    update_pgid
  </sql>
  <select id="selectByExample" parameterType="sp.co.soe.emp.domain.entity.MessageMExample" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message_m
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select 
    <include refid="Base_Column_List" />
    from message_m
    where message_id = #{messageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from message_m
    where message_id = #{messageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="sp.co.soe.emp.domain.entity.MessageMExample">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from message_m
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="sp.co.soe.emp.domain.entity.MessageM">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into message_m (message_id, message_nm, create_user, 
      create_date, create_pgid, update_user, 
      update_date, update_pgid)
    values (#{messageId,jdbcType=INTEGER}, #{messageNm,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{createPgid,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{updatePgid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="sp.co.soe.emp.domain.entity.MessageM">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into message_m
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        message_id,
      </if>
      <if test="messageNm != null">
        message_nm,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createPgid != null">
        create_pgid,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updatePgid != null">
        update_pgid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="messageNm != null">
        #{messageNm,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createPgid != null">
        #{createPgid,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePgid != null">
        #{updatePgid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="sp.co.soe.emp.domain.entity.MessageMExample" resultType="java.lang.Long">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select count(*) from message_m
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update message_m
    <set>
      <if test="record.messageId != null">
        message_id = #{record.messageId,jdbcType=INTEGER},
      </if>
      <if test="record.messageNm != null">
        message_nm = #{record.messageNm,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createPgid != null">
        create_pgid = #{record.createPgid,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatePgid != null">
        update_pgid = #{record.updatePgid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update message_m
    set message_id = #{record.messageId,jdbcType=INTEGER},
      message_nm = #{record.messageNm,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_pgid = #{record.createPgid,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      update_pgid = #{record.updatePgid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="sp.co.soe.emp.domain.entity.MessageM">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update message_m
    <set>
      <if test="messageNm != null">
        message_nm = #{messageNm,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createPgid != null">
        create_pgid = #{createPgid,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePgid != null">
        update_pgid = #{updatePgid,jdbcType=VARCHAR},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="sp.co.soe.emp.domain.entity.MessageM">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update message_m
    set message_nm = #{messageNm,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_pgid = #{createPgid,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_pgid = #{updatePgid,jdbcType=VARCHAR}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithLock" parameterType="sp.co.soe.emp.domain.entity.MessageMExample" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message_m
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    for update
  </select>
  <select id="selectByPrimaryKeyWithLock" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select 
    <include refid="Base_Column_List" />
    from message_m
    where message_id = #{messageId,jdbcType=INTEGER}
    for update
  </select>
  <insert id="insertOrUpdate" parameterType="sp.co.soe.emp.domain.entity.MessageM">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into message_m (message_id, message_nm, create_user,
    create_date, create_pgid, update_user,
    update_date, update_pgid)
    values (#{messageId,jdbcType=INTEGER}, #{messageNm,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR},
    #{createDate,jdbcType=TIMESTAMP}, #{createPgid,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR},
    #{updateDate,jdbcType=TIMESTAMP}, #{updatePgid,jdbcType=VARCHAR})
    ON CONFLICT (message_id)
    DO UPDATE SET
    message_nm = #{messageNm,jdbcType=VARCHAR},
    create_user = #{createUser,jdbcType=VARCHAR},
    create_date = #{createDate,jdbcType=TIMESTAMP},
    create_pgid = #{createPgid,jdbcType=VARCHAR},
    update_user = #{updateUser,jdbcType=VARCHAR},
    update_date = #{updateDate,jdbcType=TIMESTAMP},
    update_pgid = #{updatePgid,jdbcType=VARCHAR}
  </insert>
</mapper>